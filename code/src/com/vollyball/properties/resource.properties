# To change this license header, choose License Headers in Project Properties.
# To change this template file, choose Tools | Templates
# and open the template in the editor.

insert.signUp=insert into user_detail(id,username,emailid,password) values(?,?,?,?)

db.name=vollyball.db

create.competition = CREATE TABLE competition (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL, venue VARCHAR(255) NOT NULL,start_date DATE NOT NULL,end_date DATE NOT NULL,age_group varchar(200) NOT NULL,isDeleted INTEGER default 0);

create.user = CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) NOT NULL,password varchar(250),email_id VARCHAR(255) NOT NULL,key VARCHAR(255) NOT NULL,is_activated INTEGER NOT NULL,mac_address varchar(500),created_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);

create.team = CREATE TABLE teams (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) NOT NULL,competition_id INTEGER NOT NULL,coach VARCHAR(255),asst_coach VARCHAR(255),trainer VARCHAR(255),medical_officer VARCHAR(255),analyzer VARCHAR(255),FOREIGN KEY(competition_id) REFERENCES competition(id));

create.players = CREATE TABLE players (id INTEGER PRIMARY KEY AUTOINCREMENT,chest_num INTEGER NOT NULL,name VARCHAR(255) NOT NULL,position int,team_id INT NOT NULL,FOREIGN KEY(team_id) REFERENCES teams(id));

create.pool = CREATE TABLE pool (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) NOT NULL,competition_id INTEGER NOT NULL,FOREIGN KEY(competition_id) REFERENCES competition(id));

create.matches = CREATE TABLE matches (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) ,date DATE NOT NULL,time TIME NOT NULL,competition_id INTEGER NOT NULL,team1 INTEGER NOT NULL,team2 INTEGER NOT NULL,dayNumber INTEGER,matchNumber INTEGER,phase varchar(50),FOREIGN KEY(team1) REFERENCES teams(id),FOREIGN KEY(team2) REFERENCES teams(id),FOREIGN KEY(competition_id) REFERENCES competition(id));

create.matchplayers = CREATE TABLE match_players (id INTEGER PRIMARY KEY AUTOINCREMENT,match_id INTEGER NOT NULL,team1 INTEGER NOT NULL,player_id INTEGER NOT NULL,FOREIGN KEY(team1) REFERENCES teams(id),FOREIGN KEY(player_id) REFERENCES players(id),FOREIGN KEY(match_id) REFERENCES matches(id));

create.mskills = CREATE TABLE m_skills (id INTEGER PRIMARY KEY,name VARCHAR(100) NOT NULL);

create.mrating = CREATE TABLE m_rating (id INTEGER PRIMARY KEY,grade VARCHAR(255) NOT NULL);

create.mskilldesccriteria = CREATE TABLE m_skills_desc_criteria (id INTEGER PRIMARY KEY,type VARCHAR(255) NOT NULL,skill_id INTEGER NOT NULL,FOREIGN KEY(skill_id) REFERENCES m_skills(id));

create.mskilldesccriteriapoint = CREATE TABLE m_skill_desc_criteria_point (id INTEGER PRIMARY KEY,type varchar(100) NOT NULL,abbreviation varchar(20) NOT NULL,skill_desc_criteria_id INTEGER NOT NULL,FOREIGN KEY(skill_desc_criteria_id) REFERENCES m_skills_desc_criteria(id));

create.mskilldetails = CREATE TABLE m_skill_details (id INTEGER PRIMARY KEY,skill_id INTEGER NOT NULL,rating_id INTEGER NOT NULL,name varchar(500) NOT NULL,description TEXT NOT NULL, FOREIGN KEY(skill_id) REFERENCES m_skills(id),FOREIGN KEY(rating_id) REFERENCES m_rating(id));

create.matchevaluation = CREATE TABLE match_evaluation (id INTEGER PRIMARY KEY AUTOINCREMENT,match_id INTEGER NOT NULL,evaluation_team_id INTEGER NOT NULL,opponent_team_id INTEGER NOT NULL,set_no INTEGER NOT NULL,homescore integer default 0,opponentscore integer default 0,won_by INTEGER ,start_time TIME NOT NULL,end_time TIME NOT NULL,evaluator VARCHAR(255) NOT NULL,date Date,FOREIGN KEY(match_id) REFERENCES matches(id));

create.rally = CREATE TABLE rally (id INTEGER PRIMARY KEY AUTOINCREMENT,number INTEGER NOT NULL,home_score INTEGER default 0,opponent_score default 0,start_time varchar(50), end_time varchar(50),evaluation_id INTEGER NOT NULL,FOREIGN KEY(evaluation_id) REFERENCES match_evaluation(id));

create.rallydetails = CREATE TABLE rally_details (id INTEGER PRIMARY KEY AUTOINCREMENT,skill INTEGER NOT NULL,chest_no INTEGER NOT NULL,rating INTEGER NOT NULL,rally_id INTEGER NOT NULL,FOREIGN KEY(rally_id) REFERENCES rally(id));

create.rallydetailscriteria = CREATE TABLE rally_details_criteria (id INTEGER PRIMARY KEY AUTOINCREMENT,skill_desc_criteria_id INTEGER NOT NULL,type varchar(20) NOT NULL,rally_details_id INTEGER NOT NULL,FOREIGN KEY(rally_details_id) REFERENCES rally_details(id),FOREIGN KEY(skill_desc_criteria_id) REFERENCES m_skills_desc_criteria(id));

create.setRotationOrder = CREATE TABLE setRotationOrder (id INTEGER PRIMARY KEY AUTOINCREMENT,position	INTEGER NOT NULL,playerId INTEGER,match_evaluation_id INTEGER,FOREIGN KEY(playerId) REFERENCES players(id),FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation(id));

create.setsubstitution = CREATE TABLE set_substitution (id INTEGER PRIMARY KEY AUTOINCREMENT,position INTEGER,	rotation_player_id INTEGER,substitute_player_id INTEGER,point1 varchar(50),point2 varchar(50),match_evaluation_id INTEGER,FOREIGN KEY(rotation_player_id) REFERENCES players(id),FOREIGN KEY(substitute_player_id) REFERENCES players(id),FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation(id));

create.setplusminus = CREATE TABLE set_plus_minus (id INTEGER PRIMARY KEY AUTOINCREMENT, opponent_error varchar(50),team_fault varchar(50),match_evaluation_id INTEGER,FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation(id));

create.settimeout = CREATE TABLE set_timeOut (id INTEGER PRIMARY KEY AUTOINCREMENT,position INTEGER,timeOut varchar(50),A varchar(50),B varchar(50),match_evaluation_id INTEGER,FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation(id));

#insert queries

insert.ratings = insert into m_rating(id,grade) values(?,?);
insert.skills = insert into m_skills(id,name) values(?,?);
insert.skillsdetails = insert into m_skill_details(id,skill_id,rating_id,name,description) values(?,?,?,?,?);
insert.user= insert into user (name,email_id,key,is_activated,mac_address,password) values(?,?,?,?,?,?);








#After setup
check.login = select id from user where name = ? and password = ?;
insert.competition = insert into competition(name,venue,start_date,end_date,age_group) values(?,?,?,?,?);



#competition queries
get.competitionlist = select id,name,venue,start_date,end_date,age_group,isDeleted from competition;

#team queries
insert.team = insert into teams(name,coach,asst_coach,trainer,medical_officer,analyzer,competition_id)values(?,?,?,?,?,?,?);
get.latest.team.id = select id from teams order by id desc limit 1;
insert.player = insert into players(name,chest_num,team_id,position) values(?,?,?,?);
get.teams = select id,name from teams where competition_id = ?;
get.players = select id,name,chest_num,position from players where team_id = ?
get.matchplayers = select player_id from match_players where team1 = ? and match_id = ?
get.isMatchSelected  = select team1 from match_players where match_id=?;

#Match queries
insert.match = insert into matches(team1,team2,dayNumber,matchNumber,date,TIME,phase,competition_id)values(?,?,?,?,?,?,?,?);
get.matchesbyid= SELECT t1.name,t2.name,date,m.team1,m.team2,m.id FROM 'matches' m join teams t1 on t1.id = m.team1 join teams t2 on t2.id = m.team2  where m.competition_id = ? and m.id = ? order by date asc;
get.matches = SELECT t1.name,t2.name,date,m.team1,m.team2,m.id FROM 'matches' m join teams t1 on t1.id = m.team1 join teams t2 on t2.id = m.team2  where m.competition_id = ? order by date asc;
insert.matchplayers = insert into match_players(match_id,team1,player_id)values(?,?,?);
delete.matchPlayers = delete from match_players where match_id=?;



insert.matchset = insert into match_evaluation(match_id,evaluation_team_id,opponent_team_id,set_no,won_by,start_time,end_time,evaluator,date)values(?,?,?,?,?,?,?,?,?);
insert.matchset.rotationorder = insert into setRotationOrder(position,playerId,match_evaluation_id) values(?,?,?);
insert.matchset.substitution= insert into set_substitution(position,rotation_player_id,match_evaluation_id) values(?,?,?);
insert.matchset.plusminus= insert into set_plus_minus(opponent_error,team_fault,match_evaluation_id) values(?,?,?);
insert.matchset.timeout=insert into set_timeOut(position,timeOut,A,B,match_evaluation_id) values(?,?,?,?,?);

update.matchset.score = update match_evaluation set homescore=? , opponentscore=? where id=?;
update.matchset.substitution.point1 = update set_substitution set substitute_player_id = ?, point1=? where position=? and match_evaluation_id=?
update.matchset.substitution.point2 = update set_substitution set point2=? where position=? and match_evaluation_id=?
update.matchset.plusminus=update set_plus_minus set opponent_error=? , team_fault=? where match_evaluation_id=?


get.latest.matchset.id = select id from match_evaluation order by id desc limit 1;
get.matchset = select id,match_id,evaluation_team_id,opponent_team_id,set_no,homescore,opponentscore,won_by,start_time,end_time,evaluator,date from match_evaluation where match_id = ? and set_no = ?
get.matchset.rotationorder = select id,position,playerId,match_evaluation_id from setRotationOrder where match_evaluation_id=?;
get.matchset.substitution= select id ,position,rotation_player_id,match_evaluation_id,substitute_player_id ,point1 ,point2  from set_substitution where match_evaluation_id=?
get.matchset.plusminus = select opponent_error,team_fault from set_plus_minus where  match_evaluation_id=?
get.matchset.timeout.count = select count(id) from set_timeOut where match_evaluation_id=?
get.matchset.timeout = select position,timeOut,A,B,match_evaluation_id from set_timeOut where match_evaluation_id = ?

insert.rally = insert into rally (number,home_score,opponent_score,start_time,end_time,evaluation_id) values(?,?,?,?,?,?);
insert.rallydetails = insert into rally_details(skill,chest_no,rating,rally_id) values(?,?,?,?);
get.latest.rally.id = select id from rally order by id desc limit 1;
get.rally = select id,number,home_score,opponent_score,start_time,end_time,evaluation_id from rally where number = ? and evaluation_id = ?
get.rallydetails = select  id,skill,chest_no,rating,rally_id from rally_details where rally_id = ?;
get.rallylist= select id,number from rally where evaluation_id = ?

update.rally = update rally set home_score=? ,opponent_score=?  where id=?;
delete.rallydetails = delete from rally_details where rally_id = ?